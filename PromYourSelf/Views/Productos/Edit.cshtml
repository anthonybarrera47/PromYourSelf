<partial name="_CreateOrEditPartialView" model="Model" />

<script type="text/javascript">
    $(document).ready(function () {
        $('.select2').select2({ width: 'resolve', theme: "bootstrap" });
    });
</script>
<script>
    var app_productos = new Vue({
        el: '#app-productos',
        data: {
            etiquetas_select: [],
            etiquetas_inputs: [],
            etiquetas: [],
            etiqueta_nombre: ""

        },
        methods: {
            onChange: function (event) {
                console.log('etiqueta id en change', event);
                let etiquetas = $("#select2etiquetas").select2('val');
                console.log(etiquetas);
                app_productos.etiquetas_inputs = etiquetas.map(x => parseInt(x));
            },
            agregar_etiqueta() {
                console.log("nombre de la etiqueta", app_productos.etiqueta_nombre);
                if (app_productos.etiqueta_nombre.length <= 3) {
                    //mostrar mensaje de error
                    app_productos.etiqueta_nombre = "";
                    ToastSweetAlert('danger', 'Introduzca un nombre valido!');
                    return;
                }

                axios.get("/Productos/AgregarEtiqueta?nombre=" + app_productos.etiqueta_nombre).then(response => {
                    console.log('response', response);
                    if (response.data == true || response.data == "true") {
                        app_productos.getEtiquetas();
                        ToastSweetAlert('success', 'Etiqueta Agregada!');
                    } else {
                        ToastSweetAlert('danger', 'Ya existe una etiqueta con este nombre!');
                    }
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                });
                app_productos.etiqueta_nombre = "";
            },

            getEtiquetas: function () {
                axios.get("/Productos/GetEtiquetas").then(response => {
                    app_productos.etiquetas = [];
                    app_productos.etiquetas_select = [];
                    let res = JSON.parse(response.data);
                    console.log('res etiquetas', res);
                    let Lista = res.map(function (x) {
                        return {
                            value: x.ID,
                            text: x.Nombre
                        }

                    });
                    console.log('res Lista', Lista);
                    for (let i = 0; i < Lista.length; i++) {
                        app_productos.etiquetas.push(res[i]);
                        app_productos.etiquetas_select.push(Lista[i]);
                    }
                    console.log('res Lista Etiquetas', app_productos.etiquetas_select);
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })

            }

        }
    });
    app_productos.getEtiquetas();

</script>


<script>
    function guardarFoto() {
        console.log('guardando archivos');
        let el = document.getElementById('fotosProducto');
        preview_image(el.files);
        el.value = "";
        return false;
    }

    function remove_ondbclick(image) {
        remove(image);
        updateHiddenInputs();
    }

    function preview_image(files) {
        let div = document.getElementById('fotosPreview');

        for (let i = 0; i < files.length; i++) {
            let reader = new FileReader();

            reader.onload = function () {
                let image = document.createElement("img");
                image.ondblclick = (el, ev) => {
                    remove(image);
                    updateHiddenInputs();
                }
                image.src = reader.result;
                image.style = "max-width:300px;"
                image.className = "m-1";
                div.appendChild(image);
            }
            reader.readAsDataURL(files[i]);
            setTimeout(() => {
                updateHiddenInputs();

            }, 600)
        }
    }

    function createHiddenInput(propertyName, value) {
        let input = document.createElement('input');
        input.name = propertyName;
        input.value = value;
        input.type = "hidden";
        return input;
    }
    function updateHiddenInputs() {

        let div = document.getElementById('fotosPreview');
        //una vez agregadas las imagenes recorremos las imagenes almacenadas
        let fotosHidden = document.getElementById('fotosHidden');
        //borramos todos los hidden
        while (fotosHidden.firstChild) {
            fotosHidden.firstChild.remove();
        }
        //volvemos a agregar los hidden
        div.childNodes.forEach((val, idx, parent) => {
            console.log('foto', val);
            let input = createHiddenInput("Fotos[" + idx + "].Foto", val.src);
            fotosHidden.appendChild(input);
        });
    }

    function remove(el) {
        console.log('el', el)
        var element = el;
        element.remove();
    }
    setTimeout(() => {updateHiddenInputs() }, 100)
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}