@model Models.Productos

@{
    ButtonsCardFooter Button = new ButtonsCardFooter();
    ValuesCardHeader cardHeader = new ValuesCardHeader();
    string Action = (Model.ProductoID == 0) ? "Create" : "Edit";
    string Texto = (Model.ProductoID == 0) ? "Guardar" : "Editar";
    Button.ActionButtonSaveOrEdit = Action;
    Button.TextButtonSaveOrEdit = Texto;
    cardHeader.Text = (Model.ProductoID == 0) ? "Crear Producto" : "Modificar Producto";
    ViewData["Title"] = cardHeader.Text;
}

<div id="app-productos">
    <form asp-action="Create" method="post" id="registrationForm" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="card shadow mb-4">
            <div class="card-header"><h1 class="m-0 font-weight-bold text-primary">@cardHeader.Text</h1></div>

            <div class="card-body">

                <ul class="nav nav-tabs">
                    <li class="nav-item "><a class="nav-link active" data-toggle="tab" href="#home">Datos</a></li>
                    <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#Fotos">Fotos</a></li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="home">
                        <div class="row">
                            @if (Model.ProductoID != 0)
                            {
                                <input type="hidden" asp-for="ProductoID" />
                            }
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="Nombre" class="control-label"></label>
                                    <input asp-for="Nombre" class="form-control" />
                                    <span asp-validation-for="Nombre" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="Descripcion" class="control-label"></label>
                                    <input asp-for="Descripcion" class="form-control" />
                                    <span asp-validation-for="Descripcion" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="Unidad" class="control-label"></label>
                                    <input asp-for="Unidad" class="form-control" />
                                    <span asp-validation-for="Unidad" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="Stock" class="control-label"></label>
                                    <input asp-for="Stock" class="form-control " disabled />
                                    <span asp-validation-for="Stock" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="Precio" class="control-label"></label>
                                    <input asp-for="Precio" class="form-control" />
                                    <span asp-validation-for="Precio" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-6">
                                <div class="form-group">
                                    <label asp-for="PrecioOferta" class="control-label"></label>
                                    <input asp-for="PrecioOferta" class="form-control" />
                                    <span asp-validation-for="PrecioOferta" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-xl-6 col-md-6 col-sm-3 ">
                                <label asp-for="TipoProductos" class="control-label"></label>
                                <select asp-for="TipoProductos" class="form-control">
                                    <option value="1">Servicio</option>
                                    <option value="0">Producto</option>
                                </select>
                                <span asp-validation-for="TipoProductos" class="text-danger"></span>
                            </div>

                            <div class="form-group col-xl-6 col-md-6 col-sm-3">
                                <label for="select2etiquetas" class="control-label">Agregar Etiquetas</label>
                                <div class="input-group">
                                    <select id="select2etiquetas" multiple="multiple" class="select2 form-control"
                                            style="width:95%;"
                                            onchange="app_productos.onChange(this)">
                                        <option v-for="c in etiquetas_select" v-bind:value="c.value">{{c.text}}</option>
                                    </select>
                                    <div class="input-group-append">
                                        <button data-toggle="modal" data-target="#modal_agregar_etiqueta" class="btn btn-sm btn-success">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>

                                <div id="inputs_hidden">

                                    <input v-for="(etiqueta, index) in etiquetas_inputs" type="hidden" :name="'Etiquetas[' + index + '].EtiquetaID'" v-bind:value="etiqueta" />
                                </div>
                            </div>
                        </div>


                        @*================== MODAL PARA AGREGAR ETIQUETA ====================*@
                        <div id="div_modal_agregar_etiqueta">
                            <div class="modal" id="modal_agregar_etiqueta" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog" role="document">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Nueva Etiqueta</h5>
                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>
                                        <div class="modal-body">
                                            <div class="form-group">
                                                <label for="nombre">Nombre</label>
                                                <input class="form-control" type="text" name="nombre" v-model="etiqueta_nombre" />
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                                            <button type="button" class="btn btn-primary" data-dismiss="modal" v-on:click="agregar_etiqueta()">Guardar!</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="tab-pane" id="Fotos">
                        <a class="btn btn-primary text-white" style="float: right" data-toggle="modal" data-target="#exampleModal"><i class="fa fa-plus"></i></a>
                        <hr />
                        <small>Haga doble click en la imagen para eliminar!</small>
                        <hr />
                        <div id="fotosPreview"></div>
                        <div id="fotosHidden"></div>
                    </div>
                </div>
            </div>
            <partial name="_ButtonsCardFooterPartialView" model="Button" />
        </div>
    </form>

    <div class="modal" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input id="fotosProducto" accept="image/*" type="file" name="fotosProducto" multiple placeholder="Seleccione las fotos del producto" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal" onclick="guardarFoto()">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/js/VueJs/vue.js"></script>
<script src="~/js/VueJs/axios.min.js"></script>
<link rel="stylesheet" href="~/vendor/select2-bootstrap/select2-bootstrap-theme/select2-bootstrap.min.css">
<script src="~/vendor/select2/js/select2.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('.select2').select2({ width: 'resolve', theme: "bootstrap" });
    });
</script>
<script>
    var app_productos = new Vue({
        el: '#app-productos',
        data: {
            etiquetas_select: [],
            etiquetas_inputs: [],
            etiquetas: [],
            etiqueta_nombre: ""

        },
        methods: {
            onChange: function (event) {
                console.log('etiqueta id en change', event);
                let etiquetas = $("#select2etiquetas").select2('val');
                console.log(etiquetas);
                app_productos.etiquetas_inputs = etiquetas.map(x => parseInt(x));
            },
            agregar_etiqueta() {
                console.log("nombre de la etiqueta", app_productos.etiqueta_nombre);
                if (app_productos.etiqueta_nombre.length <= 3) {
                    //mostrar mensaje de error
                    app_productos.etiqueta_nombre = "";
                    ToastSweetAlert('danger', 'Introduzca un nombre valido!');
                    return;
                }

                axios.get("/Productos/AgregarEtiqueta?nombre=" + app_productos.etiqueta_nombre).then(response => {
                    console.log('response', response);
                    if (response.data == true || response.data == "true") {
                        app_productos.getEtiquetas();
                        ToastSweetAlert('success', 'Etiqueta Agregada!');
                    } else {
                        ToastSweetAlert('danger', 'Ya existe una etiqueta con este nombre!');
                    }
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                });
                app_productos.etiqueta_nombre = "";
            },

            getEtiquetas: function () {
                axios.get("/Productos/GetEtiquetas").then(response => {
                    app_productos.etiquetas = [];
                    app_productos.etiquetas_select = [];
                    let res = JSON.parse(response.data);
                    console.log('res etiquetas', res);
                    let Lista = res.map(function (x) {
                        return {
                            value: x.ID,
                            text: x.Nombre
                        }

                    });
                    console.log('res Lista', Lista);
                    for (let i = 0; i < Lista.length; i++) {
                        app_productos.etiquetas.push(res[i]);
                        app_productos.etiquetas_select.push(Lista[i]);
                    }
                    console.log('res Lista Etiquetas', app_productos.etiquetas_select);
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })

            }

        }
    });
    app_productos.getEtiquetas();

</script>


<script>
    function guardarFoto() {
        console.log('guardando archivos');
        let el = document.getElementById('fotosProducto');
        preview_image(el.files);
        el.value = "";
        return false;
    }

    function preview_image(files) {
        let div = document.getElementById('fotosPreview');

        for (let i = 0; i < files.length; i++) {
            let reader = new FileReader();

            reader.onload = function () {
                let image = document.createElement("img");
                image.ondblclick = (el, ev) => {
                    remove(image);
                    updateHiddenInputs();
                }
                image.src = reader.result;
                image.style = "max-width:300px;"
                image.className = "m-1";
                div.appendChild(image);
            }
            reader.readAsDataURL(files[i]);
            setTimeout(() => {
                updateHiddenInputs();

            }, 600)
        }
    }

    function createHiddenInput(propertyName, value) {
        let input = document.createElement('input');
        input.name = propertyName;
        input.value = value;
        input.type = "hidden";
        return input;
    }
    function updateHiddenInputs() {

        let div = document.getElementById('fotosPreview');
        //una vez agregadas las imagenes recorremos las imagenes almacenadas
        let fotosHidden = document.getElementById('fotosHidden');
        //borramos todos los hidden
        while (fotosHidden.firstChild) {
            fotosHidden.firstChild.remove();
        }
        //volvemos a agregar los hidden
        div.childNodes.forEach((val, idx, parent) => {
            console.log('foto', val);
            let input = createHiddenInput("Fotos[" + idx + "].Foto", val.src);
            fotosHidden.appendChild(input);
        });
    }

    function remove(el) {
        console.log('el', el)
        var element = el;
        element.remove();
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
