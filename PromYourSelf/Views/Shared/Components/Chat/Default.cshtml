@model PromYourSelf.Views.Shared.Components.Chat.ChatViewModel
@using PromYourSelf.Models
@{
    Layout = null;
}
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
<link rel='stylesheet prefetch' href='~/css/chat.css'>


<link href='https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,700,300' rel='stylesheet' type='text/css'>
<script src="https://use.typekit.net/hoy3lrg.js"></script>
<script>try { Typekit.load({ async: true }); } catch (e) { }</script>
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css'>
<link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.6.2/css/font-awesome.min.css'>

<div id="app">
    {{ message }}
    <button v-on:click="getMessages(1)" class="btn btn-primary"><i class="fa fa-search"></i></button>
    <h2>Lista de mensajes</h2>
    @*<ol>
            <li v-for="(item, index) in mensajes" v-bind:key="item.MensajeID">{{item.Contenido}} - {{item.FechaCreacion.replace('T', " ")}}</li>
        </ol>*@
    <hr />
    <div id="frame">
        <div id="sidepanel">
            <div id="profile">
                <div class="wrap">
                    <img id="profile-img" src="http://emilcarlsson.se/assets/mikeross.png" class="online" alt="" />
                    <p>@User.GetNombre()</p>
                    <i class="fa fa-chevron-down expand-button" aria-hidden="true"></i>
                    <div id="status-options">
                        <ul>
                            <li id="status-online" class="active"><span class="status-circle"></span> <p>Online</p></li>
                            <li id="status-away"><span class="status-circle"></span> <p>Away</p></li>
                            <li id="status-busy"><span class="status-circle"></span> <p>Busy</p></li>
                            <li id="status-offline"><span class="status-circle"></span> <p>Offline</p></li>
                        </ul>
                    </div>
                    <div id="expanded">
                        <label for="twitter"><i class="fa fa-facebook fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="mikeross" />
                        <label for="twitter"><i class="fa fa-twitter fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="ross81" />
                        <label for="twitter"><i class="fa fa-instagram fa-fw" aria-hidden="true"></i></label>
                        <input name="twitter" type="text" value="mike.ross" />
                    </div>
                </div>
            </div>
            <div id="search">
                <label for=""><i class="fa fa-search" aria-hidden="true"></i></label>
                <input type="text" placeholder="Search contacts..." />
            </div>
            <div id="contacts">
                <ul>
                    @{
                        foreach (var negocio in Model.negocios)
                        {
                            <li class="contact" v-on:click="getMessages(@negocio.NegocioID, '@negocio.NombreComercial')">
                                <div class="wrap">
                                    <span class="contact-status online"></span>
                                    <img src="http://emilcarlsson.se/assets/louislitt.png" alt="" />
                                    <div class="meta">
                                        <p class="name">@negocio.NombreComercial</p>
                                    </div>
                                </div>
                            </li>
                        }
                    }


                </ul>
            </div>
            <div id="bottom-bar">
                <button id="addcontact"><i class="fa fa-user-plus fa-fw" aria-hidden="true"></i> <span>Add contact</span></button>
                <button id="settings"><i class="fa fa-cog fa-fw" aria-hidden="true"></i> <span>Settings</span></button>
            </div>
        </div>
        <div class="content">
            <div class="contact-profile">
                <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                <p id="pChatR">{{negocio}}</p>
                <div class="social-media">
                    <i class="fa fa-facebook" aria-hidden="true"></i>
                    <i class="fa fa-twitter" aria-hidden="true"></i>
                    <i class="fa fa-instagram" aria-hidden="true"></i>
                </div>
            </div>
            <div class="messages">
                <ul>
                    <li v-for="(item, index) in mensajes" v-bind:key="item.MensajeID" v-bind:class="{ 'sent': item.ReceptorID == @User.GetUserID().ToInt(), 'replies': item.UsuarioID == @User.GetUserID().ToInt() }">
                        <img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
                        <p>{{item.Contenido}}</p>
                    </li>
                    @*<li class="replies">
                            <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                            <p>When you're backed against the wall, break the god damn thing down.</p>
                        </li>
                        <li class="replies">
                            <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                            <p>Excuses don't win championships.</p>
                        </li>
                        <li class="sent">
                            <img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
                            <p>Oh yeah, did Michael Jordan tell you that?</p>
                        </li>
                        <li class="replies">
                            <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                            <p>No, I told him that.</p>
                        </li>
                        <li class="replies">
                            <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                            <p>What are your choices when someone puts a gun to your head?</p>
                        </li>
                        <li class="sent">
                            <img src="http://emilcarlsson.se/assets/mikeross.png" alt="" />
                            <p>What are you talking about? You do what they say or they shoot you.</p>
                        </li>
                        <li class="replies">
                            <img src="http://emilcarlsson.se/assets/harveyspecter.png" alt="" />
                            <p>Wrong. You take the gun, or you pull out a bigger one. Or, you call their bluff. Or, you do any one of a hundred and forty six other things.</p>
                        </li>*@
                </ul>
            </div>
            <div class="message-input">
                <div class="wrap">
                    <input type="text" v-model="mensaje" placeholder="Write your message..." />
                    <i class="fa fa-paperclip attachment" aria-hidden="true"></i>
                    <button v-on:click="enviarMensaje()" class="submit"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>



<script>
    var connection = new signalR.HubConnectionBuilder().withUrl('/ChatHub').build();
    connection.start().catch(function (err) {
        console.error("Error intantendo conectar el chat", err);
    });
    //Escribir funcion para invocar envio de mensaje
    
    connection.on("newMessage", (mensaje) => {
        app.getMessages();
    });
    var app = new Vue({
        el: '#app',
        data: {
            message: 'Hello Vue!',
            mensajes: [],
            negocio: "",
            negocioId: 0,
            mensaje: ""
        },
        methods: {
            notificarMensajes(receptorId, mensaje) {
                console.log('receptorid', receptorId);
                connection.invoke("Send", receptorId, mensaje).catch(err => { console.error('Ha ocurrido un error al intentar notificar'); alert('Error intentando modificar');})
            },
            getMessages: function (receptorId, nombre) {
                app.negocio = nombre;
                app.receptorId = receptorId;
                axios.get("https://localhost:44386/Mensajes" + "/GetMessages?" + "receptorId=" + receptorId).then(response => {
                    app.mensajes = [];
                    let res = JSON.parse(response.data);
                    console.log('res', res);
                    for (let i = 0; i < res.length; i++) {
                        console.log(res[i].Contenido);
                        app.mensajes.push(res[i]);
                    }
                    console.log('mensajes', app.mensajes);
                    // alert('datos obtenidos correctamente');

                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })
            },

            enviarMensaje: function () {
                console.log('enviando mensaje : ', app.mensaje, " a negocio: ", app.receptorId);
                axios.post("https://localhost:44386/Mensajes" + "/EnviarMensaje", {
                    ReceptorID: app.receptorId,
                    Contenido: app.mensaje
                }).then(response => {
                    alert('mensaje enviado correctamente');
                    app.notificarMensajes(app.receptorId, app.mensaje);
                    app.getMessages(app.receptorId, app.negocio);
                    
                }).catch(err => { console.log('ha ocurrido un error enviando el mensaje', err); alert('Error enviando mensaje'); });
            }
        }

    });
</script>




