<div id="app-ventas">
    <partial name="_CreateOrEditPartialView" model="Model" />
</div>

<script>
    var list = [];
    var num = 0;

    function eliminar(e) {
        e.preventDefault();
        var row = e.srcElement.parentNode.parentNode;
        let id = parseInt(row.cells[0].textContent);
        list.splice(list.indexOf(el => el.id == id), 1);
        calcularTotal();
        row.parentNode.removeChild(row);
        return false;
    }

    function calcularTotal() {
        console.log('lista', list);
        let total = list.reduce((a, b) => a + b.cantidad * b.precio, 0);
        $('#total').html(total.toString());
        document.getElementById("Monto").value = total.toString();
    }
    function AgregaConcepto() {
        let Cantidad = document.getElementById("Cantidad").value;
        let Precio = document.getElementById("Precio").value;
        //let Producto = document.getElementById("Producto").val();
        let Producto = $('#Producto :selected').text();
        let id = $('#Producto :selected').val();
        let itemExists = list.find(el => el.id == parseInt(id));
        if (!itemExists) {
            list.push({ id: id, Producto: Producto, cantidad: parseInt(Cantidad), precio: parseFloat(Precio) });
        } else {
            //mostrar mensaje de error
            ToastSweetAlert('info','Este producto ya esta agregado.');
            return false;
        }
        console.log('Precio de items: ', list);
        console.log('lista de items: ', list);
        calcularTotal();

        //agregamos tabla
        let Tabla = document.getElementById("tablaConceptos");
        let TR = document.createElement("tr");
        let TDCantidad = document.createElement("td");
        let TDProducto = document.createElement("td");
        let TDPrecio = document.createElement("td");
        let TDTotal = document.createElement("td");
        let TDEliminar = document.createElement("td");
        let btnEliminar = document.createElement('button');
        btnEliminar.className = "btn btn-danger";
        btnEliminar.innerHTML = "Eliminar";
        btnEliminar.addEventListener("click", eliminar);
        TDEliminar.appendChild(btnEliminar);
        TR.appendChild(TDCantidad);
        TR.appendChild(TDProducto);
        TR.appendChild(TDPrecio);
        TR.appendChild(TDTotal);
        TR.appendChild(TDEliminar);
        TDCantidad.innerHTML = Cantidad;
        TDProducto.innerHTML = Producto;
        TDPrecio.innerHTML = Precio;
        TDTotal.innerHTML = parseFloat(Cantidad) * parseFloat(Precio);
        Tabla.appendChild(TR);

        //agregamos hiddens
        let DivProductos = document.getElementById("divProductos");
        let HiddenIndex = document.createElement("input");
        let HiddenCantidad = document.createElement("input");
        let HiddenProducto = document.createElement("input");
        let HiddenPrecio = document.createElement("input");
        let HiddenProductoId = document.createElement("input");
        console.log('el id es', parseInt(id));
        HiddenProductoId.name = "Details[" + num + "].ProductoID";
        HiddenProductoId.value = parseInt(id);
        HiddenProductoId.type = "hidden";
        HiddenIndex.name = "Details.Index";
        HiddenIndex.value = num;
        HiddenIndex.type = "hidden";
        HiddenCantidad.name = "Details[" + num + "].Cantidad";
        HiddenCantidad.value = Cantidad;
        HiddenCantidad.type = "hidden";
        HiddenProducto.name = "Details[" + num + "].Producto";
        HiddenProducto.value = Producto;
        HiddenProducto.type = "hidden";
        HiddenPrecio.name = "Details[" + num + "].Precio";
        HiddenPrecio.value = Precio;
        HiddenPrecio.type = "hidden";
        DivProductos.appendChild(HiddenIndex);
        DivProductos.appendChild(HiddenCantidad);
        DivProductos.appendChild(HiddenProducto);
        DivProductos.appendChild(HiddenPrecio);
        DivProductos.appendChild(HiddenProductoId);

        //document.getElementById("Cantidad").value = "";
        //document.getElementById("Precio").value = "";

        num++;
    }
</script>

<script>
    var app_ventas = new Vue({
        el: '#app-ventas',
        data: {
            citas_pendientes: [],
            default_value: "",
            mensajes: [],
            citaId: 0,
            productos_select: [],
            productos: [],
            productos_detalle: [],
            productoId: 0,
            precio: 0,
            cantidad: 0,
            total: 0

        },
        methods: {
            selectChange(e) {
                console.log('cambio', e);
            },
            calcular_total() {
                app_ventas.total = app_ventas.productos_detalle.reduce((a, b) => a + b.Cantidad * b.Precio, 0);
            },
            agregar_detalle() {
                console.log('productoid en agregar detalle', app_ventas.productoId);
                let index = app_ventas.productos_detalle.findIndex(x => x.ProductoID == app_ventas.productoId);
                if (index >= 0) {
                    app_ventas.productos_detalle[index].Cantidad += parseInt(app_ventas.cantidad);
                } else {
                    let producto = app_ventas.productos.filter(x => x.ProductoID == app_ventas.productoId)[0];
                    producto.Total = parseFloat(app_ventas.precio) * parseInt(app_ventas.cantidad);
                    producto.Cantidad = app_ventas.cantidad;
                    app_ventas.productos_detalle.push(producto);
                }
                app_ventas.calcular_total();

            },
            eliminar_detalle(producto) {
                console.log('Eliminando producto detalle', producto);
                app_ventas.productos_detalle.splice(app_ventas.productos_detalle.indexOf(el => el.ProductoID == producto.ProductoID), 1);
                app_ventas.calcular_total();
            },
            onChange: function (event) {
                console.log('producto id en change', event.value, "mode id", app_ventas.productoId);
                app_ventas.precio = app_ventas.productos.filter(x => x.ProductoID == parseInt(event.value))[0].Precio;
                app_ventas.cantidad = 1;
                app_ventas.productoId = event.value;
            },
            onChangeCita: function (event) {
                app_ventas.citaId = event.value;
            },
            verCitaId() { console.log("citaId", app_ventas.citaId); ,
            getCitasPendientes: function () {
                axios.get("https://localhost:44386" + "/Citas/GetCitas").then(response => {
                    app_ventas.citas_pendientes = [];
                    let res = JSON.parse(response.data);
                    const queryString = window.location.search;
                    console.log('Query string', queryString);
                    const urlParams = new URLSearchParams(queryString);
                    const citaId = urlParams.get('citaId')
                    if (citaId && citaId > 0) {
                        res = res.filter(x => x.cita.CitaID == citaId);
                    }
                    let Lista = res.filter(x => x.cita.Estado == 3).map(function (x) {
                        return {
                            value: x.cita.CitaID,
                            text: x.usuario.Nombres + " - " + x.producto.Nombre + " - " + x.cita.FechaInicio.split('T')[0],
                        }

                    });
                    for (let i = 0; i < Lista.length; i++) {
                        //if (i == 0) app_ventas.citaId = Lista[i].value;
                        app_ventas.citas_pendientes.push(Lista[i]);
                    }
                    console.log('res Lista', Lista);
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    
                })

            },
            getProductos: function () {
                axios.get("https://localhost:44386" + "/Productos/GetProductos").then(response => {
                    app_ventas.productos = [];
                    app_ventas.productos_select = [];
                    let res = JSON.parse(response.data);
                    let Lista = res.map(function (x) {
                        return {
                            value: x.ProductoID,
                            text: x.Nombre,
                        }

                    });
                    for (let i = 0; i < Lista.length; i++) {
                        if (i == 0) {
                            app_ventas.productoId = Lista[i].value;
                            app_ventas.cantidad = 1;
                            app_ventas.precio = res[i].Precio;
                        }
                        app_ventas.productos_select.push(Lista[i]);
                        app_ventas.productos.push(res[i]);
                    }
                    console.log('res Lista Productos', Lista);
                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                   
                })

            }

        }
    });
    app_ventas.getCitasPendientes();
    app_ventas.getProductos();

</script>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="~/vendor/select2/css/select2.min.css" />
    <link rel="stylesheet" href="~/vendor/select2-bootstrap/select2-bootstrap-theme/select2-bootstrap.min.css">
    <script src="~/vendor/select2/js/select2.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('.select2').select2({ width: 'resolve', theme: "classic" });
        });
    </script>
}
