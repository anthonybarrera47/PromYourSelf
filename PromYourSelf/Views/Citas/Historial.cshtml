@model ReflectionIT.Mvc.Paging.PagingList<Models.Citas>

@{
    string Titulo = "Listado  de Citas";
    string Edit = "Edit";
    string Delete = "Delete";
    string Details = "Details";
    ViewData["Title"] = Titulo;
}

<h1>Citas</h1>
<div>
    <form method="get" asp-action="Index">
        <div class="form-row justify-content-between">
            <div class="form-inline">
                <input name="filter" class="form-control" placeholder="Filtro"
                       value="@Model.RouteValue["Filter"]" />
                <button type="submit" class="btn  btn-primary">
                    <i class="fas fa-search" aria-hidden="true">Buscar</i>
                </button>
            </div>
        </div>

    </form>
</div>
<br />
<div class="card shadow">
    <div class="card-body">
        <div class="table-responsive">

            <table class="table table-hover">
                <thead class="thead-light">
                    <tr>
                        <th>
                            @Html.SortableHeaderFor(model => model.FechaInicio)
                        </th>
                        <th>
                            @Html.SortableHeaderFor(model => model.CodigoComprobacion)
                        </th>
                        <th>
                            @Html.SortableHeaderFor(model => model.Estado)
                        </th>
                        <th>
                            Estado
                        </th>

                        <th>Acci&oacute;n</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.FechaInicio)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CodigoComprobacion)
                            </td>
                            <td>
                                @if (item.Estado == Models.EstadoCita.Cancelada)
                                {

                                    <span class="bg-danger"> @Html.DisplayFor(modelItem => item.Estado)</span>
                                }

                                @if (item.Estado == Models.EstadoCita.Solicitado || item.Estado == Models.EstadoCita.EnProceso)
                                {

                                    <span class="bg-warning"> @Html.DisplayFor(modelItem => item.Estado)</span>
                                }

                                @if (item.Estado == Models.EstadoCita.Finalizado || item.Estado == Models.EstadoCita.Aceptada)
                                {
                                    <span class="bg-warning"> @Html.DisplayFor(modelItem => item.Estado)</span>
                                }

                            </td>
                            <td>
                                @if (User.GetPosicion() == Models.Posicion.Administrador.GetDescription())
                                {<a v-on:click="aceptarCita(@item.CitaID)" class="btn btn-sm btn-success text-white"><i class="fas fa-check"></i></a>} &nbsp;<a class="btn btn-sm btn-danger text-white"><i class="fas fa-window-close"></i></a>

                            </td>

                            <partial name="_ActionsPartialView" model="new Actions() { Key =item.CitaID,EditAction=Edit,DetailsAction=Details,DeleteAction=Delete  }" />

                        </tr>
                    }
                </tbody>
            </table>
            <partial name="_PaginationPartialView" model="this.Model" />
        </div>
    </div>
</div>