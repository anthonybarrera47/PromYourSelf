@model Models.Negocios

@{
    string Titulo = "Mi Negocio";
    ViewData["Title"] = Titulo;
}
<link rel='stylesheet prefetch' href='~/css/float-button.css'>
<div id="app">
    <form class="form">
        <input type="hidden" name="negocioId" id="negocioId" value="@Model.NegocioID" />
        <input type="hidden" name="telefono1" id="telefono1" value="@Model.Telefono1" />
        <input type="hidden" name="nombre_comercial" id="nombre_comercial" value="@Model.NombreComercial" />
        <input type="hidden" name="direccion" id="direccion" value="@Model.Direccion" />
        <input type="hidden" name="negocio_id" id="negocio_id" value="@Model.NegocioID" />
        <input type="hidden" v-bind="telefono2" name="telefono2" id="telefono2" value="@Model.Telefono2" />
        <input type="hidden" v-bind="latitud" name="latitud" id="latitud" value="@Model.Latitud" />
        <input type="hidden" v-bind="longitud" name="longitud" id="longitud" value="@Model.Longitud" />
        <div class="card shadow mb-4">
            <div class="card-header">
                <h1 class="m-0 font-weight-bold text-primary">@Html.DisplayFor(model => model.NombreComercial)</h1>
                @Html.DisplayFor(model => model.Direccion) <br /><span class="text-success"> <span v-on:click="copiarTelefono(1)"> <li class="fa fa-phone"></li> &nbsp;@Html.DisplayFor(model => model.Telefono1)</span>  <span v-if="telefono2" v-on:click="copiarTelefono(2)"> <li class="fa fa-phone"> </li>&nbsp;@Html.DisplayFor(model => model.Telefono1)</span>
            </div>
            <div class="card-body">
                <div class="card-deck">
                    <div class="card p-3 text-center" style="background-color: cadetblue;border-radius: 5px;" v-for="item in productos">
                        <div class="card-header bg-tertiary ">
                            @* Titulo de la tarjeta *@
                            <h2 style="font-weight: bold" class="text-black-50">{{item.Nombre}} - <span class="text-success"> ${{item.Precio}}</span></h2>
                        </div>
                        <div class="card-body">
                            @* Cuerpo de la tarjeta *@
                            <p class="text-white">
                                {{item.Descripcion}}
                            </p>
                        </div>
                        <div class="card-footer" v-if="item.TipoProductos == 1">
                            @* Footer de la tarjeta *@
                            @if (User.GetPosicion().Equals(string.Empty))
                            {
                                <a class="btn btn-warning btn-block" asp-action="Login" asp-controller="EntradaApp">Iniciar Sesión para Reservar Cita</a>
                            }
                            else
                            {
                                <a class="btn btn-warning btn-block" v-bind:href="'https://localhost:44386/Citas/Create/?servicio='+ item.ProductoID">Reservar Cita</a>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="row">
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <a class="btn btn-primary btn-block" data-toggle="collapse" href="#CollapseMap" aria-expanded="false" aria-controls="CollapseMap">
                        Ver Mapa <i class="fas fa-map-marked-alt"></i>
                    </a>
                </div>
                <div class="card-body collapse" id="CollapseMap">
                    <div id="mapa" style="width: 100%;height: 600px;"></div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <div class="card">
                <div class="card-header">
                    <a class="btn btn-primary btn-block" data-toggle="collapse" href="#CollapseHorarios" aria-expanded="false" aria-controls="CollapseHorarios">
                        Horarios <i class="far fa-clock"></i>
                    </a>
                </div>
                <div class="card-body collapse" id="CollapseHorarios">
                    <dl class="row">
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Lunes)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Martes)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Miercoles)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Jueves)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Viernes)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Sabado)
                        </dd>
                        <dd class="col-sm-10">
                            @Html.DisplayFor(model => model.Horarios.Domingo)
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>
</div>

<li class=" dropdown no-arrow mx-1">

    <a onclick="openMessage()" href="#" class="float  dropdown-toggle" data-toggle="dropdown" id="enviarMensajeDropdown" role="button" aria-haspopup="true" aria-expanded="false">
        <i class="fas fa-sms my-float"></i>
    </a>
    <!-- Dropdown - Messages animated--grow-in-->
    <div id="menumensaje" class="dropdown-list dropdown-menu dropdown-menu-right shadow" aria-labelledby="enviarMensajeDropdown">
        <h6 class="dropdown-header">
            Message Center
        </h6>
        @await Component.InvokeAsync("Chat", new { usuarioId = User.GetUserID().ToInt(), Model.NegocioID })
    </div>
</li>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="~/vendor/jquery/jquery.min.js"></script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0cad1LFmApInoTY5wF_qwK_hQHnIOWfo&callback=initMap"
        type="text/javascript"></script>

<script>
    $(document).ready(function () {
        console.log("ready!");
        $("#menumensaje").click(function (e) {
            console.log('menumensaje clicked', e);
            e.stopPropagation();
        });
    });

    function openMessage() {

        $(this).parent().toggleClass('open');

    };

    var app = new Vue({
        el: '#app',
        data: {
            negocio: {},
            productos: [],
            telefono2: "",
            buscarPor: "todo",
            filtro: "",
            porTodo: false,
            porNegocios: false,
            porProductos: false,
            btn_text: "Buscar....",
            latitud: "",
            longitud: ""
        },
        methods: {
            getAll: function () {
                console.log('buscarPor', app.buscarPor);
                if (app.buscarPor == "todo") {
                    app.getNegocios();
                    app.getProductos();
                } else if (app.buscarPor == "negocios") {
                    app.getNegocios();
                } else {
                    app.getProductos();
                }
            },
            copiarTelefono(idx) {
                let telefono = "";
                if (idx == 1) {
                    telefono = document.getElementById('telefono1').value;
                } else {
                    telefono = document.getElementById('telefono2').value;
                }

                let blob = new Blob([telefono], { type: 'text/plain' });
                let item = new ClipboardItem({ 'text/plain': blob });
                navigator.clipboard.write([item]).then(function () {
                    ToastSweetAlert('success', `${telefono} copiado!`);
                }, function (err) {
                    console.log('Ha ocurrido un error intentando copiar el telefono', err);
                });

            },


            getProductos: function () {
                let negocioId = document.getElementById('negocioId').value;
                axios.get("https://localhost:44386" + "/Negocios/GetProductosByNegocio" + `?negocioId=${negocioId}&buscarpor=${app.buscarPor}`).then(response => {
                    app.productos = [];
                    let res = JSON.parse(response.data);
                    console.log('res', res);
                    for (let i = 0; i < res.length; i++) {
                        app.productos.push(res[i]);
                    }

                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })
            },

            change(event) {
                console.log('checkbox changed', app.porTodo, app.porNegocios, app.porProductos);
                if (app.porTodo || (app.porNegocios && app.porProductos)) {
                    app.buscarPor = "todo";
                    app.porNegocios = false;
                    app.porProductos = false;
                } else if (app.porNegocios) {
                    app.buscarPor = "negocios";
                    app.porTodo = false;
                    app.porProductos = false;
                } else {
                    app.buscarPor = "productos";
                    app.porTodo = false;
                    app.porNegocios = false;
                }
            }

        }

    });

    app.getProductos();
</script>


<script>
    let map, infoWindow;
    let latitud = parseFloat($("#latitud").val());
    let longitud = parseFloat($("#longitud").val());
    let nombre_comercial = $("#nombre_comercial").val();
    let direccion = $("#direccion").val();
    let negocio_id = parseInt($("#negocio_id").val());
    console.log("latitud: ", latitud, "longitud: ", longitud);
    function initMap() {
        map = new google.maps.Map(document.getElementById("mapa"), {
            center: { lat: latitud, lng: longitud },
            zoom: 15
        });
        infoWindow = new google.maps.InfoWindow();
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                position => {
                    const pos = {
                        lat: latitud,
                        lng: longitud
                    };

                    infoWindow.setPosition(pos);
                    let url = `/negocios/details/${negocio_id}`;
                    infoWindow.setContent(`<h3>${nombre_comercial} <br> ${direccion}.</h3><br><a href='${url}' class='btn text-white btn-primary btn-block'>Visitar Negocio</a>`);
                    //infoWindow.open(map);
                    console.log('pos', pos);
                    var marker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        title: 'Información del Negocio'
                    });
                    marker.addListener('click', function () {
                        infoWindow.open(map, marker);
                    });

                    map.setCenter(pos);
                },
                () => {
                    handleLocationError(true, infoWindow, map.getCenter());
                }
            );
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }
    $(document).ready(function () {
        initMap();
    });
</script>

