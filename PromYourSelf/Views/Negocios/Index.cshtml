@model ReflectionIT.Mvc.Paging.PagingList<Models.Negocios>

@{
    string Titulo = "Listado  de Negocios";
    ViewData["Title"] = Titulo;
    string Details = "Details";
    int PageSize = 1;
}

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0cad1LFmApInoTY5wF_qwK_hQHnIOWfo&callback=initMap"
        type="text/javascript"></script>
<div id="app-negocios">
    <h1>Negocios</h1>

    @*<link href="~/css/switch.css" rel="stylesheet" />*@
    <div>
        <form method="get" asp-action="Index">
            <div class="form-row justify-content-between">
                <div class="form-inline">
                    <input name="filter" class="form-control" placeholder="Filtro"
                           v-model="filtro" />
                    <button type="button" v-on:click="getAll()" class="btn  btn-primary">
                        <i class="fas fa-search" aria-hidden="true">{{btn_text}}</i>
                    </button>

                    <div class="custom-control custom-switch ml-1">
                        <input name="todo" v-on:change="change($event)" v-model="porTodo" type="checkbox" class="custom-control-input form-control-lg" id="customSwitch1">
                        <label class="custom-control-label" for="customSwitch1">Todo</label>
                    </div>
                    <div class="custom-control custom-switch ml-1">
                        <input v-on:change="change($event)" v-model="porNegocios" type="checkbox" class="custom-control-input" id="customSwitch2">
                        <label class="custom-control-label" for="customSwitch2">Negocios</label>
                    </div>
                    <div class="custom-control custom-switch ml-1">
                        <input v-on:change="change($event)" v-model="porProductos" type="checkbox" class="custom-control-input" id="customSwitch3">
                        <label class="custom-control-label" for="customSwitch3">Servicios</label>
                    </div>


                </div>
                <div class="form-group">
                    <select asp-for="@PageSize" class="form-control">
                        <option value="5" selected>5</option>
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="50">50</option>
                    </select>
                </div>
            </div>

        </form>
    </div>
    <br />
    <h4 class="text-center">Negocios recomendados</h4>
    @*<hr />
        <div class="card-columns mt-5">
            @foreach (var item in Model)
            {
                <div class="card p-3 text-center border-primary">
                    <div class="card-header bg-tertiary ">
                        <strong> @Html.DisplayFor(modelItem => item.NombreComercial)</strong>

                    </div>
                    <div class="card-body">
                        <p>
                            @Html.DisplayFor(modelItem => item.Direccion)
                        </p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-outline-primary btn-block" asp-action="@Details" asp-route-id="@item.NegocioID">Ver Negocio</a>
                    </div>
                </div>
            }
        </div>*@
    <hr />
    <div class="container-fluid">
        <div class="d-flex flex-row flex-nowrap overflow-auto card-columns">
            @foreach (var item in Model)
            {
                <div class="col-12">
                    <div class="card card-block">
                        <div class="card-header bg-tertiary ">
                            @* Titulo de la tarjeta *@
                            <strong> @Html.DisplayFor(modelItem => item.NombreComercial)</strong>

                        </div>
                        <div class="card-body">
                            @* Cuerpo de la tarjeta *@
                            <p>
                                @Html.DisplayFor(modelItem => item.Direccion)
                            </p>
                        </div>
                        <div class="card-footer">
                            @* Footer de la tarjeta *@
                            <a class="btn btn-outline-primary btn-block" asp-action="@Details" asp-route-id="@item.NegocioID">Ver Negocio</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
    <hr />
    <hr />
    <p>
        <a class="btn btn-primary btn-block" data-toggle="collapse" href="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            Ver Mapa <i class="fas fa-map-marked-alt"></i>
        </a>
    </p>
    <div class="collapse" id="collapseExample">
        <div class="card card-body">
            <div id="mapa" style="width: 100%;height: 600px;"></div>
        </div>
    </div>
    <h4 class="text-center">Productos</h4>
    <hr />
    <div class="card-columns">
        <div class="card p-3 text-center border-primary" v-for="item in productos">
            <div class="card-header bg-tertiary ">
                @* Titulo de la tarjeta *@
                <h2>{{item.Nombre}} - <span class="text-success"> ${{item.Precio}}</span></h2>

            </div>
            <div class="card-body">
                @* Cuerpo de la tarjeta *@
                <p>
                    {{item.Descripcion}}
                </p>
            </div>
            <div class="card-footer">
                @* Footer de la tarjeta *@
                <a v-if="item.TipoProductos == 1" class="btn btn-warning btn-block" v-bind:href="'https://localhost:44386/Citas/Create/?servicio='+ item.ProductoID">Reservar Cita</a>
                @*<a v-if="item.TipoProductos == 0" v-bind:href="https://localhost:44386/Productos/Details/'+{{item.ProductoID}}" class="btn btn-outline-primary btn-block">Ver Producto</a>*@
                <a class="btn btn-outline-primary btn-block" v-bind:href="'https://localhost:44386/Negocios/Details/'+ item.NegocioID">Ver Negocio</a>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<script>
    var app_negocios = new Vue({
        el: '#app-negocios',
        data: {
            negocios: [],
            productos: [],
            buscarPor: "todo",
            filtro: "",
            porTodo: false,
            porNegocios: false,
            porProductos: false,
            btn_text: "Buscar...."
        },
        methods: {
            getAll: function () {
                console.log('buscarPor', app_negocios.buscarPor);
                if (app_negocios.buscarPor == "todo") {
                    app_negocios.getNegocios();
                    app_negocios.getProductos();
                } else if (app_negocios.buscarPor == "negocios") {
                    app_negocios.getNegocios();
                } else {
                    app_negocios.getProductos();
                }
            },

            getNegocios: function () {
                axios.get("https://localhost:44386" + "/Negocios/GetNegocios" + `?filter=${app_negocios.filtro}&buscarpor=${app_negocios.buscarPor}`).then(response => {
                    app_negocios.negocios = [];
                    let res = JSON.parse(response.data);
                    console.log('res', res);
                    for (let i = 0; i < res.length; i++) {
                        console.log(res[i].Contenido);
                        app_negocios.negocios.push(res[i]);
                    }

                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })
            },

            getProductos: function () {
                axios.get("https://localhost:44386" + "/Negocios/GetProductos" + `?filter=${app_negocios.filtro}&buscarpor=${app_negocios.buscarPor}`).then(response => {
                    app_negocios.productos = [];
                    let res = JSON.parse(response.data);
                    console.log('res', res);
                    for (let i = 0; i < res.length; i++) {
                        app_negocios.productos.push(res[i]);
                    }

                }).catch(err => {
                    console.log('ha ocurrido un error', err);
                    alert('Ha ocurrido un error');
                })
            },

            change(event) {
                console.log('checkbox changed', app_negocios.porTodo, app_negocios.porNegocios, app_negocios.porProductos);
                if (app_negocios.porTodo || (app_negocios.porNegocios && app_negocios.porProductos)) {
                    app_negocios.buscarPor = "todo";
                    app_negocios.porNegocios = false;
                    app_negocios.porProductos = false;
                } else if (app_negocios.porNegocios) {
                    app_negocios.buscarPor = "negocios";
                    app_negocios.porTodo = false;
                    app_negocios.porProductos = false;
                } else {
                    app_negocios.buscarPor = "productos";
                    app_negocios.porTodo = false;
                    app_negocios.porNegocios = false;
                }
            }

        }

    });

    app_negocios.getAll();
</script>

<script>
    let map, infoWindow;

    function initMap() {
        map = new google.maps.Map(document.getElementById("mapa"), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 15
        });
        infoWindow = new google.maps.InfoWindow();
        console.log("negocios de app negocios", app_negocios.negocios);
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                position => {
                    for (let negocio of app_negocios.negocios) {
                        let pos_negocio = {
                            lat: parseFloat(negocio.Latitud),
                            lng: parseFloat(negocio.Longitud)
                        };
                        infoWindow.setPosition(pos_negocio);
                        infoWindow.setContent(`<h3>${negocio.Nombre} <br> ${negocio.Descripcion}.</h3><br><input class='form-control' placeholder='Introduzca un servicio'><br><a class='btn text-white btn-primary btn-block'><i class='fa fa-search'></i></a><br><a class='btn text-white btn-primary btn-block'>Visitar Negocio</a>`);
                        var marker_negocio = new google.maps.Marker({
                            position: pos_negocio,
                            map: map,
                            title: 'Información del Negocio'
                        });
                        marker_negocio.addListener('click', function () {
                            infoWindow.open(map, marker_negocio);
                        });
                    }
                    const pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent("<h3>Esta es tu ubicación. Localiza los negocios cercanos.</h3><br><input class='form-control' placeholder='Introduzca un servicio'><br><a class='btn text-white btn-primary btn-block'><i class='fa fa-search'></i></a><br><a class='btn text-white btn-primary btn-block'>Visitar Negocio</a>");
                    //infoWindow.open(map);
                    console.log('pos', pos);
                    var marker = new google.maps.Marker({
                        position: pos,
                        map: map,
                        title: 'Información del Negocio'
                    });
                    marker.addListener('click', function () {
                        infoWindow.open(map, marker);
                    });
                   
                    map.setCenter(pos);
                },
                () => {
                    handleLocationError(true, infoWindow, map.getCenter());
                }
            );
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }
    initMap();
</script>
